/*
  Copyright (c) Microsoft Corporation. All rights reserved.
  Licensed under the MIT License. See License.txt in the project root for license information.
*/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Assembly: Microsoft.Crm.Sdk.Proxy, Version=5.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
namespace Microsoft.Xrm.Client.Messages
{
	
	
	public partial class OrganizationServiceContextExtensions
	{
		
		public static System.Guid AddRecurrence(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target, System.Guid appointmentId)
		{
			string requestName = "AddRecurrence";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("AppointmentId", appointmentId);
			return context.Execute<System.Guid>(requestName, parameters, "id");
		}
		
		public static System.Guid AddItemCampaign(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid campaignId, System.Guid entityId, string entityName)
		{
			string requestName = "AddItemCampaign";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignId", campaignId);
			parameters.Add("EntityId", entityId);
			parameters.Add("EntityName", entityName);
			return context.Execute<System.Guid>(requestName, parameters, "CampaignItemId");
		}
		
		public static System.Guid AddItemCampaignActivity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid campaignActivityId, System.Guid itemId, string entityName)
		{
			string requestName = "AddItemCampaignActivity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignActivityId", campaignActivityId);
			parameters.Add("ItemId", itemId);
			parameters.Add("EntityName", entityName);
			return context.Execute<System.Guid>(requestName, parameters, "CampaignActivityItemId");
		}
		
		public static System.Guid AddMemberList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId, System.Guid entityId)
		{
			string requestName = "AddMemberList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			parameters.Add("EntityId", entityId);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static void AddListMembersList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId, System.Guid[] memberIds)
		{
			string requestName = "AddListMembersList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			parameters.Add("MemberIds", memberIds);
			context.Execute(requestName, parameters);
		}
		
		public static void QualifyMemberList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId, System.Guid[] membersId, bool overrideorRemove)
		{
			string requestName = "QualifyMemberList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			parameters.Add("MembersId", membersId);
			parameters.Add("OverrideorRemove", overrideorRemove);
			context.Execute(requestName, parameters);
		}
		
		public static void AddProductToKit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid kitId, System.Guid productId)
		{
			string requestName = "AddProductToKit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("KitId", kitId);
			parameters.Add("ProductId", productId);
			context.Execute(requestName, parameters);
		}
		
		public static void AddSubstituteProduct(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid productId, System.Guid substituteId)
		{
			string requestName = "AddSubstituteProduct";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ProductId", productId);
			parameters.Add("SubstituteId", substituteId);
			context.Execute(requestName, parameters);
		}
		
		public static string ValidateRecurrenceRule(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target)
		{
			string requestName = "ValidateRecurrenceRule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			return context.Execute<string>(requestName, parameters, "Description");
		}
		
		public static System.Guid CreateException(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target, System.DateTime originalStartDate, bool isDeleted)
		{
			string requestName = "CreateException";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("OriginalStartDate", originalStartDate);
			parameters.Add("IsDeleted", isDeleted);
			return context.Execute<System.Guid>(requestName, parameters, "id");
		}
		
		public static bool VerifyProcessStateData(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, string processState)
		{
			string requestName = "VerifyProcessStateData";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("ProcessState", processState);
			return context.Execute<bool>(requestName, parameters, "IsValid");
		}
		
		public static bool CreateInstance(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target, int count)
		{
			string requestName = "CreateInstance";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("Count", count);
			return context.Execute<bool>(requestName, parameters, "SeriesCanBeExpanded");
		}
		
		public static void DeleteOpenInstances(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target, System.DateTime seriesEndDate, int stateOfPastInstances)
		{
			string requestName = "DeleteOpenInstances";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("SeriesEndDate", seriesEndDate);
			parameters.Add("StateOfPastInstances", stateOfPastInstances);
			context.Execute(requestName, parameters);
		}
		
		public static TResult Book<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target)
		
		{
			string requestName = "Book";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			return context.Execute<TResult>(requestName, parameters, "ValidationResult");
		}
		
		public static void SendBulkMail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference sender, System.Guid templateId, string regardingType, System.Guid regardingId, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "SendBulkMail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Sender", sender);
			parameters.Add("TemplateId", templateId);
			parameters.Add("RegardingType", regardingType);
			parameters.Add("RegardingId", regardingId);
			parameters.Add("Query", query);
			context.Execute(requestName, parameters);
		}
		
		public static decimal CalculateActualValueOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId)
		{
			string requestName = "CalculateActualValueOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			return context.Execute<decimal>(requestName, parameters, "Value");
		}
		
		public static long CalculateTotalTimeIncident(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid incidentId)
		{
			string requestName = "CalculateTotalTimeIncident";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("IncidentId", incidentId);
			return context.Execute<long>(requestName, parameters, "TotalTime");
		}
		
		public static void CancelContract(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid contractId, System.DateTime cancelDate, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "CancelContract";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ContractId", contractId);
			parameters.Add("CancelDate", cancelDate);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static void CancelSalesOrder(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity orderClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "CancelSalesOrder";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OrderClose", orderClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static TResponse CheckIncomingEmail<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string messageId, string subject, string from, string to, string cc, string bcc)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "CheckIncomingEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("MessageId", messageId);
			parameters.Add("Subject", subject);
			parameters.Add("From", from);
			parameters.Add("To", to);
			parameters.Add("Cc", cc);
			parameters.Add("Bcc", bcc);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static TResponse CheckPromoteEmail<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string messageId, string subject)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "CheckPromoteEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("MessageId", messageId);
			parameters.Add("Subject", subject);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.Entity CloneContract(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid contractId, bool includeCanceledLines)
		{
			string requestName = "CloneContract";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ContractId", contractId);
			parameters.Add("IncludeCanceledLines", includeCanceledLines);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static void CloseIncident(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity incidentResolution, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "CloseIncident";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("IncidentResolution", incidentResolution);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static void CloseQuote(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity quoteClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "CloseQuote";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QuoteClose", quoteClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid CompoundCreate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity entity, Microsoft.Xrm.Sdk.EntityCollection childEntities)
		{
			string requestName = "CompoundCreate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Entity", entity);
			parameters.Add("ChildEntities", childEntities);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static void CompoundUpdate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity entity, Microsoft.Xrm.Sdk.EntityCollection childEntities)
		{
			string requestName = "CompoundUpdate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Entity", entity);
			parameters.Add("ChildEntities", childEntities);
			context.Execute(requestName, parameters);
		}
		
		public static void ConvertKitToProduct(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid kitId)
		{
			string requestName = "ConvertKitToProduct";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("KitId", kitId);
			context.Execute(requestName, parameters);
		}
		
		public static void ConvertProductToKit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid productId)
		{
			string requestName = "ConvertProductToKit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ProductId", productId);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.Entity ConvertQuoteToSalesOrder(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid quoteId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "ConvertQuoteToSalesOrder";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QuoteId", quoteId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.Entity ConvertSalesOrderToInvoice(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid salesOrderId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "ConvertSalesOrderToInvoice";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SalesOrderId", salesOrderId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static System.Guid CopyCampaign(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid baseCampaign, bool saveAsTemplate)
		{
			string requestName = "CopyCampaign";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BaseCampaign", baseCampaign);
			parameters.Add("SaveAsTemplate", saveAsTemplate);
			return context.Execute<System.Guid>(requestName, parameters, "CampaignCopyId");
		}
		
		public static System.Guid CreateActivitiesList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId, string friendlyName, Microsoft.Xrm.Sdk.Entity activity, System.Guid templateId, bool propagate, object ownershipOptions, Microsoft.Xrm.Sdk.EntityReference owner, bool sendEmail, bool postWorkflowEvent, System.Guid queueId)
		{
			string requestName = "CreateActivitiesList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			parameters.Add("FriendlyName", friendlyName);
			parameters.Add("Activity", activity);
			parameters.Add("TemplateId", templateId);
			parameters.Add("Propagate", propagate);
			parameters.Add("OwnershipOptions", ownershipOptions);
			parameters.Add("Owner", owner);
			parameters.Add("sendEmail", sendEmail);
			parameters.Add("PostWorkflowEvent", postWorkflowEvent);
			parameters.Add("QueueId", queueId);
			return context.Execute<System.Guid>(requestName, parameters, "BulkOperationId");
		}
		
		public static System.Guid DeliverIncomingEmail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string messageId, string subject, string from, string to, string cc, string bcc, System.DateTime receivedOn, string submittedBy, string importance, string body, Microsoft.Xrm.Sdk.EntityCollection attachments)
		{
			string requestName = "DeliverIncomingEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("MessageId", messageId);
			parameters.Add("Subject", subject);
			parameters.Add("From", from);
			parameters.Add("To", to);
			parameters.Add("Cc", cc);
			parameters.Add("Bcc", bcc);
			parameters.Add("ReceivedOn", receivedOn);
			parameters.Add("SubmittedBy", submittedBy);
			parameters.Add("Importance", importance);
			parameters.Add("Body", body);
			parameters.Add("Attachments", attachments);
			return context.Execute<System.Guid>(requestName, parameters, "EmailId");
		}
		
		public static System.Guid DeliverPromoteEmail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid emailId, string messageId, string subject, string from, string to, string cc, string bcc, System.DateTime receivedOn, string submittedBy, string importance, string body, Microsoft.Xrm.Sdk.EntityCollection attachments, Microsoft.Xrm.Sdk.Entity extraProperties)
		{
			string requestName = "DeliverPromoteEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EmailId", emailId);
			parameters.Add("MessageId", messageId);
			parameters.Add("Subject", subject);
			parameters.Add("From", from);
			parameters.Add("To", to);
			parameters.Add("Cc", cc);
			parameters.Add("Bcc", bcc);
			parameters.Add("ReceivedOn", receivedOn);
			parameters.Add("SubmittedBy", submittedBy);
			parameters.Add("Importance", importance);
			parameters.Add("Body", body);
			parameters.Add("Attachments", attachments);
			parameters.Add("ExtraProperties", extraProperties);
			return context.Execute<System.Guid>(requestName, parameters, "EmailId");
		}
		
		public static string QueryExpressionToFetchXml(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "QueryExpressionToFetchXml";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Query", query);
			return context.Execute<string>(requestName, parameters, "FetchXml");
		}
		
		public static System.Guid DistributeCampaignActivity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid campaignActivityId, bool propagate, Microsoft.Xrm.Sdk.Entity activity, System.Guid templateId, object ownershipOptions, Microsoft.Xrm.Sdk.EntityReference owner, bool sendEmail, System.Guid queueId)
		{
			string requestName = "DistributeCampaignActivity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignActivityId", campaignActivityId);
			parameters.Add("Propagate", propagate);
			parameters.Add("Activity", activity);
			parameters.Add("TemplateId", templateId);
			parameters.Add("OwnershipOptions", ownershipOptions);
			parameters.Add("Owner", owner);
			parameters.Add("SendEmail", sendEmail);
			parameters.Add("QueueId", queueId);
			return context.Execute<System.Guid>(requestName, parameters, "BulkOperationId");
		}
		
		public static TResult ExpandCalendar<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid calendarId, System.DateTime start, System.DateTime end)
		
		{
			string requestName = "ExpandCalendar";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CalendarId", calendarId);
			parameters.Add("Start", start);
			parameters.Add("End", end);
			return context.Execute<TResult>(requestName, parameters, "result");
		}
		
		public static void ProvisionLanguage(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int language)
		{
			string requestName = "ProvisionLanguage";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Language", language);
			context.Execute(requestName, parameters);
		}
		
		public static void DeprovisionLanguage(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int language)
		{
			string requestName = "DeprovisionLanguage";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Language", language);
			context.Execute(requestName, parameters);
		}
		
		public static string RetrieveInstalledLanguagePackVersion(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int language)
		{
			string requestName = "RetrieveInstalledLanguagePackVersion";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Language", language);
			return context.Execute<string>(requestName, parameters, "Version");
		}
		
		public static string RetrieveProvisionedLanguagePackVersion(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int language)
		{
			string requestName = "RetrieveProvisionedLanguagePackVersion";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Language", language);
			return context.Execute<string>(requestName, parameters, "Version");
		}
		
		public static int[] RetrieveProvisionedLanguages(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveProvisionedLanguages";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<int[]>(requestName, parameters, "RetrieveProvisionedLanguages");
		}
		
		public static int[] RetrieveDeprovisionedLanguages(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveDeprovisionedLanguages";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<int[]>(requestName, parameters, "RetrieveDeprovisionedLanguages");
		}
		
		public static int[] RetrieveInstalledLanguagePacks(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveInstalledLanguagePacks";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<int[]>(requestName, parameters, "RetrieveInstalledLanguagePacks");
		}
		
		public static Microsoft.Xrm.Sdk.Query.QueryExpression FetchXmlToQueryExpression(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string fetchXml)
		{
			string requestName = "FetchXmlToQueryExpression";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("FetchXml", fetchXml);
			return context.Execute<Microsoft.Xrm.Sdk.Query.QueryExpression>(requestName, parameters, "Query");
		}
		
		public static bool FindParentResourceGroup(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid parentId, System.Guid[] childrenIds)
		{
			string requestName = "FindParentResourceGroup";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ParentId", parentId);
			parameters.Add("ChildrenIds", childrenIds);
			return context.Execute<bool>(requestName, parameters, "result");
		}
		
		public static void FulfillSalesOrder(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity orderClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "FulfillSalesOrder";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OrderClose", orderClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.Entity GenerateInvoiceFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "GenerateInvoiceFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.Entity GenerateQuoteFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "GenerateQuoteFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.Entity GenerateSalesOrderFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "GenerateSalesOrderFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static System.Guid PublishDuplicateRule(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid duplicateRuleId)
		{
			string requestName = "PublishDuplicateRule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("DuplicateRuleId", duplicateRuleId);
			return context.Execute<System.Guid>(requestName, parameters, "JobId");
		}
		
		public static void PublishXml(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string parameterXml)
		{
			string requestName = "PublishXml";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ParameterXml", parameterXml);
			context.Execute(requestName, parameters);
		}
		
		public static void UnpublishDuplicateRule(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid duplicateRuleId)
		{
			string requestName = "UnpublishDuplicateRule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("DuplicateRuleId", duplicateRuleId);
			context.Execute(requestName, parameters);
		}
		
		public static void CompoundUpdateDuplicateDetectionRule(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity entity, Microsoft.Xrm.Sdk.EntityCollection childEntities)
		{
			string requestName = "CompoundUpdateDuplicateDetectionRule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Entity", entity);
			parameters.Add("ChildEntities", childEntities);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveDuplicates(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity businessEntity, string matchingEntityName, Microsoft.Xrm.Sdk.Query.PagingInfo pagingInfo)
		{
			string requestName = "RetrieveDuplicates";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BusinessEntity", businessEntity);
			parameters.Add("MatchingEntityName", matchingEntityName);
			parameters.Add("PagingInfo", pagingInfo);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "DuplicateCollection");
		}
		
		public static void GetInvoiceProductsFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, System.Guid invoiceId)
		{
			string requestName = "GetInvoiceProductsFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("InvoiceId", invoiceId);
			context.Execute(requestName, parameters);
		}
		
		public static int GetQuantityDecimal(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, System.Guid productId, System.Guid uoMId)
		{
			string requestName = "GetQuantityDecimal";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("ProductId", productId);
			parameters.Add("UoMId", uoMId);
			return context.Execute<int>(requestName, parameters, "Quantity");
		}
		
		public static void GetQuoteProductsFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, System.Guid quoteId)
		{
			string requestName = "GetQuoteProductsFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("QuoteId", quoteId);
			context.Execute(requestName, parameters);
		}
		
		public static void GetSalesOrderProductsFromOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid opportunityId, System.Guid salesOrderId)
		{
			string requestName = "GetSalesOrderProductsFromOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityId", opportunityId);
			parameters.Add("SalesOrderId", salesOrderId);
			context.Execute(requestName, parameters);
		}
		
		public static string GetTrackingTokenEmail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string subject)
		{
			string requestName = "GetTrackingTokenEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Subject", subject);
			return context.Execute<string>(requestName, parameters, "TrackingToken");
		}
		
		public static string GetDecryptionKey(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "GetDecryptionKey";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<string>(requestName, parameters, "Key");
		}
		
		public static Microsoft.Xrm.Sdk.Entity InitializeFrom(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entityMoniker, string targetEntityName, object targetFieldType)
		{
			string requestName = "InitializeFrom";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityMoniker", entityMoniker);
			parameters.Add("TargetEntityName", targetEntityName);
			parameters.Add("TargetFieldType", targetFieldType);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection InstantiateTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid templateId, string objectType, System.Guid objectId)
		{
			string requestName = "InstantiateTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateId", templateId);
			parameters.Add("ObjectType", objectType);
			parameters.Add("ObjectId", objectId);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static bool IsBackOfficeInstalled(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "IsBackOfficeInstalled";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<bool>(requestName, parameters, "IsInstalled");
		}
		
		public static bool IsValidStateTransition(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entity, string newState, int newStatus)
		{
			string requestName = "IsValidStateTransition";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Entity", entity);
			parameters.Add("NewState", newState);
			parameters.Add("NewStatus", newStatus);
			return context.Execute<bool>(requestName, parameters, "IsValid");
		}
		
		public static void LockInvoicePricing(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid invoiceId)
		{
			string requestName = "LockInvoicePricing";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("InvoiceId", invoiceId);
			context.Execute(requestName, parameters);
		}
		
		public static void LockSalesOrderPricing(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid salesOrderId)
		{
			string requestName = "LockSalesOrderPricing";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SalesOrderId", salesOrderId);
			context.Execute(requestName, parameters);
		}
		
		public static void LoseOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity opportunityClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "LoseOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityClose", opportunityClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static void Merge(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, System.Guid subordinateId, Microsoft.Xrm.Sdk.Entity updateContent, bool performParentingChecks)
		{
			string requestName = "Merge";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("SubordinateId", subordinateId);
			parameters.Add("UpdateContent", updateContent);
			parameters.Add("PerformParentingChecks", performParentingChecks);
			context.Execute(requestName, parameters);
		}
		
		public static void ProcessInboundEmail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid inboundEmailActivity)
		{
			string requestName = "ProcessInboundEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("InboundEmailActivity", inboundEmailActivity);
			context.Execute(requestName, parameters);
		}
		
		public static void PublishAllXml(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "PublishAllXml";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid BulkDetectDuplicates(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryBase query, string jobName, bool sendEmailNotification, System.Guid templateId, System.Guid[] toRecipients, System.Guid[] cCRecipients, string recurrencePattern, System.DateTime recurrenceStartTime)
		{
			string requestName = "BulkDetectDuplicates";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Query", query);
			parameters.Add("JobName", jobName);
			parameters.Add("SendEmailNotification", sendEmailNotification);
			parameters.Add("TemplateId", templateId);
			parameters.Add("ToRecipients", toRecipients);
			parameters.Add("CCRecipients", cCRecipients);
			parameters.Add("RecurrencePattern", recurrencePattern);
			parameters.Add("RecurrenceStartTime", recurrenceStartTime);
			return context.Execute<System.Guid>(requestName, parameters, "JobId");
		}
		
		public static TResult QuerySchedule<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid resourceId, System.DateTime start, System.DateTime end, object timeCodes)
		
		{
			string requestName = "QuerySchedule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceId", resourceId);
			parameters.Add("Start", start);
			parameters.Add("End", end);
			parameters.Add("TimeCodes", timeCodes);
			return context.Execute<TResult>(requestName, parameters, "TimeInfos");
		}
		
		public static TResult QueryMultipleSchedules<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid[] resourceIds, System.DateTime start, System.DateTime end, object timeCodes)
		
		{
			string requestName = "QueryMultipleSchedules";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceIds", resourceIds);
			parameters.Add("Start", start);
			parameters.Add("End", end);
			parameters.Add("TimeCodes", timeCodes);
			return context.Execute<TResult>(requestName, parameters, "TimeInfos");
		}
		
		public static void RemoveItemCampaign(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid campaignId, System.Guid entityId)
		{
			string requestName = "RemoveItemCampaign";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignId", campaignId);
			parameters.Add("EntityId", entityId);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveItemCampaignActivity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid campaignActivityId, System.Guid itemId)
		{
			string requestName = "RemoveItemCampaignActivity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignActivityId", campaignActivityId);
			parameters.Add("ItemId", itemId);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveMemberList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId, System.Guid entityId)
		{
			string requestName = "RemoveMemberList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			parameters.Add("EntityId", entityId);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveProductFromKit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid kitId, System.Guid productId)
		{
			string requestName = "RemoveProductFromKit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("KitId", kitId);
			parameters.Add("ProductId", productId);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveRelated(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference[] target)
		{
			string requestName = "RemoveRelated";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveSubstituteProduct(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid productId, System.Guid substituteId)
		{
			string requestName = "RemoveSubstituteProduct";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ProductId", productId);
			parameters.Add("SubstituteId", substituteId);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.Entity RenewContract(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid contractId, int status, bool includeCanceledLines)
		{
			string requestName = "RenewContract";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ContractId", contractId);
			parameters.Add("Status", status);
			parameters.Add("IncludeCanceledLines", includeCanceledLines);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static TResult Reschedule<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target)
		
		{
			string requestName = "Reschedule";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			return context.Execute<TResult>(requestName, parameters, "ValidationResult");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveByGroupResource(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid resourceGroupId, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveByGroupResource";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceGroupId", resourceGroupId);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveByResourceResourceGroup(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid resourceId, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveByResourceResourceGroup";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceId", resourceId);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveByResourcesService(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid[] resourceIds, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveByResourcesService";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceIds", resourceIds);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveByTopIncidentProductKbArticle(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid productId)
		{
			string requestName = "RetrieveByTopIncidentProductKbArticle";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ProductId", productId);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveByTopIncidentSubjectKbArticle(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid subjectId)
		{
			string requestName = "RetrieveByTopIncidentSubjectKbArticle";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SubjectId", subjectId);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static string RetrieveDeploymentLicenseType(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveDeploymentLicenseType";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<string>(requestName, parameters, "licenseType");
		}
		
		public static TResponse RetrieveLicenseInfo<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int accessMode)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "RetrieveLicenseInfo";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("AccessMode", accessMode);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrievePrivilegeSet(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrievePrivilegeSet";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveParentGroupsResourceGroup(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid resourceGroupId, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveParentGroupsResourceGroup";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceGroupId", resourceGroupId);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveSubGroupsResourceGroup(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid resourceGroupId, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveSubGroupsResourceGroup";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ResourceGroupId", resourceGroupId);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static TResult RetrieveUserPrivileges<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid userId)
		
		{
			string requestName = "RetrieveUserPrivileges";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("UserId", userId);
			return context.Execute<TResult>(requestName, parameters, "RolePrivileges");
		}
		
		public static TResult RetrieveTeamPrivileges<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid teamId)
		
		{
			string requestName = "RetrieveTeamPrivileges";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TeamId", teamId);
			return context.Execute<TResult>(requestName, parameters, "RolePrivileges");
		}
		
		public static Microsoft.Xrm.Sdk.AttributePrivilegeCollection RetrievePrincipalAttributePrivileges(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference principal)
		{
			string requestName = "RetrievePrincipalAttributePrivileges";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Principal", principal);
			return context.Execute<Microsoft.Xrm.Sdk.AttributePrivilegeCollection>(requestName, parameters, "AttributePrivileges");
		}
		
		public static Microsoft.Xrm.Sdk.Entity ReviseQuote(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid quoteId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "ReviseQuote";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QuoteId", quoteId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection Rollup(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.Query.QueryBase query, object rollupType)
		{
			string requestName = "Rollup";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("Query", query);
			parameters.Add("RollupType", rollupType);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static TResult Search<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, object appointmentRequest)
		
		{
			string requestName = "Search";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("AppointmentRequest", appointmentRequest);
			return context.Execute<TResult>(requestName, parameters, "SearchResults");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection SearchByBodyKbArticle(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string searchText, System.Guid subjectId, bool useInflection, Microsoft.Xrm.Sdk.Query.QueryBase queryExpression)
		{
			string requestName = "SearchByBodyKbArticle";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SearchText", searchText);
			parameters.Add("SubjectId", subjectId);
			parameters.Add("UseInflection", useInflection);
			parameters.Add("QueryExpression", queryExpression);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection SearchByKeywordsKbArticle(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string searchText, System.Guid subjectId, bool useInflection, Microsoft.Xrm.Sdk.Query.QueryBase queryExpression)
		{
			string requestName = "SearchByKeywordsKbArticle";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SearchText", searchText);
			parameters.Add("SubjectId", subjectId);
			parameters.Add("UseInflection", useInflection);
			parameters.Add("QueryExpression", queryExpression);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection SearchByTitleKbArticle(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string searchText, System.Guid subjectId, bool useInflection, Microsoft.Xrm.Sdk.Query.QueryBase queryExpression)
		{
			string requestName = "SearchByTitleKbArticle";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SearchText", searchText);
			parameters.Add("SubjectId", subjectId);
			parameters.Add("UseInflection", useInflection);
			parameters.Add("QueryExpression", queryExpression);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static void SendFax(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid faxId, bool issueSend)
		{
			string requestName = "SendFax";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("FaxId", faxId);
			parameters.Add("IssueSend", issueSend);
			context.Execute(requestName, parameters);
		}
		
		public static string SendEmail(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid emailId, bool issueSend, string trackingToken)
		{
			string requestName = "SendEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EmailId", emailId);
			parameters.Add("IssueSend", issueSend);
			parameters.Add("TrackingToken", trackingToken);
			return context.Execute<string>(requestName, parameters, "Subject");
		}
		
		public static void SendTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid templateId, Microsoft.Xrm.Sdk.EntityReference sender, string recipientType, System.Guid[] recipientIds, string regardingType, System.Guid regardingId)
		{
			string requestName = "SendTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateId", templateId);
			parameters.Add("Sender", sender);
			parameters.Add("RecipientType", recipientType);
			parameters.Add("RecipientIds", recipientIds);
			parameters.Add("RegardingType", regardingType);
			parameters.Add("RegardingId", regardingId);
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid SendEmailFromTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid templateId, string regardingType, System.Guid regardingId, Microsoft.Xrm.Sdk.Entity target)
		{
			string requestName = "SendEmailFromTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateId", templateId);
			parameters.Add("RegardingType", regardingType);
			parameters.Add("RegardingId", regardingId);
			parameters.Add("Target", target);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static void SetRelated(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference[] target)
		{
			string requestName = "SetRelated";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			context.Execute(requestName, parameters);
		}
		
		public static void AssociateEntities(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference moniker1, Microsoft.Xrm.Sdk.EntityReference moniker2, string relationshipName)
		{
			string requestName = "AssociateEntities";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Moniker1", moniker1);
			parameters.Add("Moniker2", moniker2);
			parameters.Add("RelationshipName", relationshipName);
			context.Execute(requestName, parameters);
		}
		
		public static void DisassociateEntities(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference moniker1, Microsoft.Xrm.Sdk.EntityReference moniker2, string relationshipName)
		{
			string requestName = "DisassociateEntities";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Moniker1", moniker1);
			parameters.Add("Moniker2", moniker2);
			parameters.Add("RelationshipName", relationshipName);
			context.Execute(requestName, parameters);
		}
		
		public static void UnlockInvoicePricing(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid invoiceId)
		{
			string requestName = "UnlockInvoicePricing";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("InvoiceId", invoiceId);
			context.Execute(requestName, parameters);
		}
		
		public static void UnlockSalesOrderPricing(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid salesOrderId)
		{
			string requestName = "UnlockSalesOrderPricing";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SalesOrderId", salesOrderId);
			context.Execute(requestName, parameters);
		}
		
		public static TResponse WhoAmI<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "WhoAmI";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static void WinOpportunity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity opportunityClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "WinOpportunity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OpportunityClose", opportunityClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static void WinQuote(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity quoteClose, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "WinQuote";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QuoteClose", quoteClose);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static string RetrieveVersion(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveVersion";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<string>(requestName, parameters, "Version");
		}
		
		public static void AutoMapEntity(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityMapId)
		{
			string requestName = "AutoMapEntity";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityMapId", entityMapId);
			context.Execute(requestName, parameters);
		}
		
		public static void CopyMembersList(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid sourceListId, System.Guid targetListId)
		{
			string requestName = "CopyMembersList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SourceListId", sourceListId);
			parameters.Add("TargetListId", targetListId);
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid CopyDynamicListToStatic(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid listId)
		{
			string requestName = "CopyDynamicListToStatic";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ListId", listId);
			return context.Execute<System.Guid>(requestName, parameters, "StaticListId");
		}
		
		public static void ResetUserFilters(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int queryType)
		{
			string requestName = "ResetUserFilters";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QueryType", queryType);
			context.Execute(requestName, parameters);
		}
		
		public static TResponse BackgroundSendEmail<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryBase query)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "BackgroundSendEmail";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Query", query);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static System.Guid PropagateByExpression(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryBase queryExpression, string friendlyName, bool executeImmediately, Microsoft.Xrm.Sdk.Entity activity, System.Guid templateId, object ownershipOptions, bool postWorkflowEvent, Microsoft.Xrm.Sdk.EntityReference owner, bool sendEmail, System.Guid queueId)
		{
			string requestName = "PropagateByExpression";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QueryExpression", queryExpression);
			parameters.Add("FriendlyName", friendlyName);
			parameters.Add("ExecuteImmediately", executeImmediately);
			parameters.Add("Activity", activity);
			parameters.Add("TemplateId", templateId);
			parameters.Add("OwnershipOptions", ownershipOptions);
			parameters.Add("PostWorkflowEvent", postWorkflowEvent);
			parameters.Add("Owner", owner);
			parameters.Add("SendEmail", sendEmail);
			parameters.Add("QueueId", queueId);
			return context.Execute<System.Guid>(requestName, parameters, "BulkOperationId");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveMembersBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, int bulkOperationSource, int entitySource, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveMembersBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("BulkOperationSource", bulkOperationSource);
			parameters.Add("EntitySource", entitySource);
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static int ProcessOneMemberBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, Microsoft.Xrm.Sdk.Entity entity, int bulkOperationSource)
		{
			string requestName = "ProcessOneMemberBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("Entity", entity);
			parameters.Add("BulkOperationSource", bulkOperationSource);
			return context.Execute<int>(requestName, parameters, "ProcessResult");
		}
		
		public static void CleanUpBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, int bulkOperationSource)
		{
			string requestName = "CleanUpBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("BulkOperationSource", bulkOperationSource);
			context.Execute(requestName, parameters);
		}
		
		public static void StatusUpdateBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, int failureCount, int successCount)
		{
			string requestName = "StatusUpdateBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("FailureCount", failureCount);
			parameters.Add("SuccessCount", successCount);
			context.Execute(requestName, parameters);
		}
		
		public static void BulkOperationStatusClose(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, int failureCount, int successCount, int statusReason, int errorCode)
		{
			string requestName = "BulkOperationStatusClose";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("FailureCount", failureCount);
			parameters.Add("SuccessCount", successCount);
			parameters.Add("StatusReason", statusReason);
			parameters.Add("ErrorCode", errorCode);
			context.Execute(requestName, parameters);
		}
		
		public static void LogSuccessBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, System.Guid regardingObjectId, int regardingObjectTypeCode, System.Guid createdObjectId, int createdObjectTypeCode, string additionalInfo)
		{
			string requestName = "LogSuccessBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("RegardingObjectId", regardingObjectId);
			parameters.Add("RegardingObjectTypeCode", regardingObjectTypeCode);
			parameters.Add("CreatedObjectId", createdObjectId);
			parameters.Add("CreatedObjectTypeCode", createdObjectTypeCode);
			parameters.Add("AdditionalInfo", additionalInfo);
			context.Execute(requestName, parameters);
		}
		
		public static void LogFailureBulkOperation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid bulkOperationId, System.Guid regardingObjectId, int regardingObjectTypeCode, int errorCode, string message, string additionalInfo)
		{
			string requestName = "LogFailureBulkOperation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BulkOperationId", bulkOperationId);
			parameters.Add("RegardingObjectId", regardingObjectId);
			parameters.Add("RegardingObjectTypeCode", regardingObjectTypeCode);
			parameters.Add("ErrorCode", errorCode);
			parameters.Add("Message", message);
			parameters.Add("AdditionalInfo", additionalInfo);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveDependentComponents(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid objectId, int componentType)
		{
			string requestName = "RetrieveDependentComponents";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ObjectId", objectId);
			parameters.Add("ComponentType", componentType);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveRequiredComponents(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid objectId, int componentType)
		{
			string requestName = "RetrieveRequiredComponents";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ObjectId", objectId);
			parameters.Add("ComponentType", componentType);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveMissingDependencies(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string solutionUniqueName)
		{
			string requestName = "RetrieveMissingDependencies";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SolutionUniqueName", solutionUniqueName);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveDependenciesForDelete(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid objectId, int componentType)
		{
			string requestName = "RetrieveDependenciesForDelete";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ObjectId", objectId);
			parameters.Add("ComponentType", componentType);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveDependenciesForUninstall(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string solutionUniqueName)
		{
			string requestName = "RetrieveDependenciesForUninstall";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SolutionUniqueName", solutionUniqueName);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static System.Guid BulkDelete(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryExpression[] querySet, string jobName, bool sendEmailNotification, System.Guid[] toRecipients, System.Guid[] cCRecipients, string recurrencePattern, System.DateTime startDateTime, System.Nullable<System.Guid> sourceImportId)
		{
			string requestName = "BulkDelete";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("QuerySet", querySet);
			parameters.Add("JobName", jobName);
			parameters.Add("SendEmailNotification", sendEmailNotification);
			parameters.Add("ToRecipients", toRecipients);
			parameters.Add("CCRecipients", cCRecipients);
			parameters.Add("RecurrencePattern", recurrencePattern);
			parameters.Add("StartDateTime", startDateTime);
			parameters.Add("SourceImportId", sourceImportId);
			return context.Execute<System.Guid>(requestName, parameters, "JobId");
		}
		
		public static decimal RetrieveExchangeRate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid transactionCurrencyId)
		{
			string requestName = "RetrieveExchangeRate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TransactionCurrencyId", transactionCurrencyId);
			return context.Execute<decimal>(requestName, parameters, "ExchangeRate");
		}
		
		public static int[] RetrieveAvailableLanguages(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveAvailableLanguages";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<int[]>(requestName, parameters, "LocaleIds");
		}
		
		public static Microsoft.Xrm.Sdk.Label RetrieveLocLabels(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entityMoniker, string attributeName, bool includeUnpublished)
		{
			string requestName = "RetrieveLocLabels";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityMoniker", entityMoniker);
			parameters.Add("AttributeName", attributeName);
			parameters.Add("IncludeUnpublished", includeUnpublished);
			return context.Execute<Microsoft.Xrm.Sdk.Label>(requestName, parameters, "Label");
		}
		
		public static void SetLocLabels(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entityMoniker, string attributeName, Microsoft.Xrm.Sdk.LocalizedLabel[] labels)
		{
			string requestName = "SetLocLabels";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityMoniker", entityMoniker);
			parameters.Add("AttributeName", attributeName);
			parameters.Add("Labels", labels);
			context.Execute(requestName, parameters);
		}
		
		public static System.DateTime UtcTimeFromLocalTime(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int timeZoneCode, System.DateTime localTime)
		{
			string requestName = "UtcTimeFromLocalTime";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TimeZoneCode", timeZoneCode);
			parameters.Add("LocalTime", localTime);
			return context.Execute<System.DateTime>(requestName, parameters, "UtcTime");
		}
		
		public static System.DateTime LocalTimeFromUtcTime(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int timeZoneCode, System.DateTime utcTime)
		{
			string requestName = "LocalTimeFromUtcTime";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TimeZoneCode", timeZoneCode);
			parameters.Add("UtcTime", utcTime);
			return context.Execute<System.DateTime>(requestName, parameters, "LocalTime");
		}
		
		public static int GetTimeZoneCodeByLocalizedName(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string localizedStandardName, int localeId)
		{
			string requestName = "GetTimeZoneCodeByLocalizedName";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("LocalizedStandardName", localizedStandardName);
			parameters.Add("LocaleId", localeId);
			return context.Execute<int>(requestName, parameters, "TimeZoneCode");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection GetAllTimeZonesWithDisplayName(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, int localeId)
		{
			string requestName = "GetAllTimeZonesWithDisplayName";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("LocaleId", localeId);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static TResult RetrieveOrganizationResources<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		
		{
			string requestName = "RetrieveOrganizationResources";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<TResult>(requestName, parameters, "OrganizationResources");
		}
		
		public static byte[] ExportSolution(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string solutionName, bool managed, bool exportAutoNumberingSettings, bool exportCalendarSettings, bool exportCustomizationSettings, bool exportEmailTrackingSettings, bool exportGeneralSettings, bool exportMarketingSettings, bool exportOutlookSynchronizationSettings, bool exportRelationshipRoles, bool exportIsvConfig)
		{
			string requestName = "ExportSolution";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SolutionName", solutionName);
			parameters.Add("Managed", managed);
			parameters.Add("ExportAutoNumberingSettings", exportAutoNumberingSettings);
			parameters.Add("ExportCalendarSettings", exportCalendarSettings);
			parameters.Add("ExportCustomizationSettings", exportCustomizationSettings);
			parameters.Add("ExportEmailTrackingSettings", exportEmailTrackingSettings);
			parameters.Add("ExportGeneralSettings", exportGeneralSettings);
			parameters.Add("ExportMarketingSettings", exportMarketingSettings);
			parameters.Add("ExportOutlookSynchronizationSettings", exportOutlookSynchronizationSettings);
			parameters.Add("ExportRelationshipRoles", exportRelationshipRoles);
			parameters.Add("ExportIsvConfig", exportIsvConfig);
			return context.Execute<byte[]>(requestName, parameters, "ExportSolutionFile");
		}
		
		public static void ImportSolution(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, bool overwriteUnmanagedCustomizations, bool publishWorkflows, byte[] customizationFile, System.Guid importJobId)
		{
			string requestName = "ImportSolution";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("OverwriteUnmanagedCustomizations", overwriteUnmanagedCustomizations);
			parameters.Add("PublishWorkflows", publishWorkflows);
			parameters.Add("CustomizationFile", customizationFile);
			parameters.Add("ImportJobId", importJobId);
			context.Execute(requestName, parameters);
		}
		
		public static byte[] ExportTranslation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string solutionName)
		{
			string requestName = "ExportTranslation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("SolutionName", solutionName);
			return context.Execute<byte[]>(requestName, parameters, "ExportTranslationFile");
		}
		
		public static void ImportTranslation(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, byte[] translationFile, System.Guid importJobId)
		{
			string requestName = "ImportTranslation";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TranslationFile", translationFile);
			parameters.Add("ImportJobId", importJobId);
			context.Execute(requestName, parameters);
		}
		
		public static TResult RetrieveMissingComponents<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, byte[] customizationFile)
		
		{
			string requestName = "RetrieveMissingComponents";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CustomizationFile", customizationFile);
			return context.Execute<TResult>(requestName, parameters, "MissingComponents");
		}
		
		public static string RetrieveFormattedImportJobResults(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importJobId)
		{
			string requestName = "RetrieveFormattedImportJobResults";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportJobId", importJobId);
			return context.Execute<string>(requestName, parameters, "FormattedResults");
		}
		
		public static System.Guid AddToQueue(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, System.Guid sourceQueueId, System.Guid destinationQueueId, Microsoft.Xrm.Sdk.Entity queueItemProperties)
		{
			string requestName = "AddToQueue";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("SourceQueueId", sourceQueueId);
			parameters.Add("DestinationQueueId", destinationQueueId);
			parameters.Add("QueueItemProperties", queueItemProperties);
			return context.Execute<System.Guid>(requestName, parameters, "QueueItemId");
		}
		
		public static void AddMembersTeam(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid teamId, System.Guid[] memberIds)
		{
			string requestName = "AddMembersTeam";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TeamId", teamId);
			parameters.Add("MemberIds", memberIds);
			context.Execute(requestName, parameters);
		}
		
		public static void AddPrivilegesRole(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid roleId, object privileges)
		{
			string requestName = "AddPrivilegesRole";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("RoleId", roleId);
			parameters.Add("Privileges", privileges);
			context.Execute(requestName, parameters);
		}
		
		public static void Assign(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.EntityReference assignee)
		{
			string requestName = "Assign";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("Assignee", assignee);
			context.Execute(requestName, parameters);
		}
		
		public static string ExecuteFetch(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string fetchXml)
		{
			string requestName = "ExecuteFetch";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("FetchXml", fetchXml);
			return context.Execute<string>(requestName, parameters, "FetchXmlResult");
		}
		
		public static string ExecuteByIdSavedQuery(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId)
		{
			string requestName = "ExecuteByIdSavedQuery";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			return context.Execute<string>(requestName, parameters, "String");
		}
		
		public static string ExecuteByIdUserQuery(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entityId)
		{
			string requestName = "ExecuteByIdUserQuery";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			return context.Execute<string>(requestName, parameters, "String");
		}
		
		public static string[] GetDistinctValuesImportFile(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importFileId, int columnNumber, int pageNumber, int recordsPerPage)
		{
			string requestName = "GetDistinctValuesImportFile";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportFileId", importFileId);
			parameters.Add("columnNumber", columnNumber);
			parameters.Add("pageNumber", pageNumber);
			parameters.Add("recordsPerPage", recordsPerPage);
			return context.Execute<string[]>(requestName, parameters, "Values");
		}
		
		public static string[] GetHeaderColumnsImportFile(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importFileId)
		{
			string requestName = "GetHeaderColumnsImportFile";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportFileId", importFileId);
			return context.Execute<string[]>(requestName, parameters, "Columns");
		}
		
		public static System.Guid ParseImport(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importId)
		{
			string requestName = "ParseImport";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportId", importId);
			return context.Execute<System.Guid>(requestName, parameters, "AsyncOperationId");
		}
		
		public static System.Guid TransformImport(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importId)
		{
			string requestName = "TransformImport";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportId", importId);
			return context.Execute<System.Guid>(requestName, parameters, "AsyncOperationId");
		}
		
		public static void GrantAccess(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, object principalAccess)
		{
			string requestName = "GrantAccess";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("PrincipalAccess", principalAccess);
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid ImportRecordsImport(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importId)
		{
			string requestName = "ImportRecordsImport";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportId", importId);
			return context.Execute<System.Guid>(requestName, parameters, "AsyncOperationId");
		}
		
		public static void MakeAvailableToOrganizationTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid templateId)
		{
			string requestName = "MakeAvailableToOrganizationTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateId", templateId);
			context.Execute(requestName, parameters);
		}
		
		public static void MakeAvailableToOrganizationReport(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid reportId)
		{
			string requestName = "MakeAvailableToOrganizationReport";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ReportId", reportId);
			context.Execute(requestName, parameters);
		}
		
		public static void MakeUnavailableToOrganizationTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid templateId)
		{
			string requestName = "MakeUnavailableToOrganizationTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateId", templateId);
			context.Execute(requestName, parameters);
		}
		
		public static void MakeUnavailableToOrganizationReport(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid reportId)
		{
			string requestName = "MakeUnavailableToOrganizationReport";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ReportId", reportId);
			context.Execute(requestName, parameters);
		}
		
		public static void SetReportRelated(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid reportId, int[] entities, int[] categories, int[] visibility)
		{
			string requestName = "SetReportRelated";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ReportId", reportId);
			parameters.Add("Entities", entities);
			parameters.Add("Categories", categories);
			parameters.Add("Visibility", visibility);
			context.Execute(requestName, parameters);
		}
		
		public static string DownloadReportDefinition(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid reportId)
		{
			string requestName = "DownloadReportDefinition";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ReportId", reportId);
			return context.Execute<string>(requestName, parameters, "BodyText");
		}
		
		public static int GetReportHistoryLimit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid reportId)
		{
			string requestName = "GetReportHistoryLimit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ReportId", reportId);
			return context.Execute<int>(requestName, parameters, "HistoryLimit");
		}
		
		public static void ModifyAccess(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, object principalAccess)
		{
			string requestName = "ModifyAccess";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("PrincipalAccess", principalAccess);
			context.Execute(requestName, parameters);
		}
		
		public static void ReassignObjectsSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid userId, Microsoft.Xrm.Sdk.EntityReference reassignPrincipal)
		{
			string requestName = "ReassignObjectsSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("UserId", userId);
			parameters.Add("ReassignPrincipal", reassignPrincipal);
			context.Execute(requestName, parameters);
		}
		
		public static void ReassignObjectsOwner(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference fromPrincipal, Microsoft.Xrm.Sdk.EntityReference toPrincipal)
		{
			string requestName = "ReassignObjectsOwner";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("FromPrincipal", fromPrincipal);
			parameters.Add("ToPrincipal", toPrincipal);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveMembersTeam(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid teamId, System.Guid[] memberIds)
		{
			string requestName = "RemoveMembersTeam";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TeamId", teamId);
			parameters.Add("MemberIds", memberIds);
			context.Execute(requestName, parameters);
		}
		
		public static void RemovePrivilegeRole(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid roleId, System.Guid privilegeId)
		{
			string requestName = "RemovePrivilegeRole";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("RoleId", roleId);
			parameters.Add("PrivilegeId", privilegeId);
			context.Execute(requestName, parameters);
		}
		
		public static void ReplacePrivilegesRole(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid roleId, object privileges)
		{
			string requestName = "ReplacePrivilegesRole";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("RoleId", roleId);
			parameters.Add("Privileges", privileges);
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.Entity RetrieveUnpublished(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveUnpublished";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveUnpublishedMultiple(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Query.QueryBase query)
		{
			string requestName = "RetrieveUnpublishedMultiple";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Query", query);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveAllChildUsersSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveAllChildUsersSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveBusinessHierarchyBusinessUnit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveBusinessHierarchyBusinessUnit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveMembersTeam(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet memberColumnSet)
		{
			string requestName = "RetrieveMembersTeam";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("MemberColumnSet", memberColumnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static TResult RetrievePrincipalAccess<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.EntityReference principal)
		
		{
			string requestName = "RetrievePrincipalAccess";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("Principal", principal);
			return context.Execute<TResult>(requestName, parameters, "AccessRights");
		}
		
		public static TResult RetrieveRolePrivilegesRole<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid roleId)
		
		{
			string requestName = "RetrieveRolePrivilegesRole";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("RoleId", roleId);
			return context.Execute<TResult>(requestName, parameters, "RolePrivileges");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveSubsidiaryTeamsBusinessUnit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveSubsidiaryTeamsBusinessUnit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveSubsidiaryUsersBusinessUnit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveSubsidiaryUsersBusinessUnit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.EntityCollection RetrieveTeamsSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveTeamsSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.EntityCollection>(requestName, parameters, "EntityCollection");
		}
		
		public static Microsoft.Xrm.Sdk.Entity RetrieveUserSettingsSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, Microsoft.Xrm.Sdk.Query.ColumnSet columnSet)
		{
			string requestName = "RetrieveUserSettingsSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("ColumnSet", columnSet);
			return context.Execute<Microsoft.Xrm.Sdk.Entity>(requestName, parameters, "Entity");
		}
		
		public static TResponse RetrieveFormXml<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string entityName)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "RetrieveFormXml";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityName", entityName);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static TResult RetrieveSharedPrincipalsAndAccess<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target)
		
		{
			string requestName = "RetrieveSharedPrincipalsAndAccess";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			return context.Execute<TResult>(requestName, parameters, "PrincipalAccesses");
		}
		
		public static void RevokeAccess(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.EntityReference revokee)
		{
			string requestName = "RevokeAccess";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("Revokee", revokee);
			context.Execute(requestName, parameters);
		}
		
		public static void SetBusinessSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid userId, System.Guid businessId, Microsoft.Xrm.Sdk.EntityReference reassignPrincipal)
		{
			string requestName = "SetBusinessSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("UserId", userId);
			parameters.Add("BusinessId", businessId);
			parameters.Add("ReassignPrincipal", reassignPrincipal);
			context.Execute(requestName, parameters);
		}
		
		public static void SetBusinessEquipment(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid equipmentId, System.Guid businessUnitId)
		{
			string requestName = "SetBusinessEquipment";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EquipmentId", equipmentId);
			parameters.Add("BusinessUnitId", businessUnitId);
			context.Execute(requestName, parameters);
		}
		
		public static void SetParentBusinessUnit(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid businessUnitId, System.Guid parentId)
		{
			string requestName = "SetParentBusinessUnit";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("BusinessUnitId", businessUnitId);
			parameters.Add("ParentId", parentId);
			context.Execute(requestName, parameters);
		}
		
		public static void SetParentSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid userId, System.Guid parentId, bool keepChildUsers)
		{
			string requestName = "SetParentSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("UserId", userId);
			parameters.Add("ParentId", parentId);
			parameters.Add("KeepChildUsers", keepChildUsers);
			context.Execute(requestName, parameters);
		}
		
		public static void SetParentTeam(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid teamId, System.Guid businessId)
		{
			string requestName = "SetParentTeam";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TeamId", teamId);
			parameters.Add("BusinessId", businessId);
			context.Execute(requestName, parameters);
		}
		
		public static void RemoveParent(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target)
		{
			string requestName = "RemoveParent";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			context.Execute(requestName, parameters);
		}
		
		public static System.Guid CreateWorkflowFromTemplate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string workflowName, System.Guid workflowTemplateId)
		{
			string requestName = "CreateWorkflowFromTemplate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("WorkflowName", workflowName);
			parameters.Add("WorkflowTemplateId", workflowTemplateId);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static System.Guid ExecuteWorkflow(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid entityId, System.Guid workflowId)
		{
			string requestName = "ExecuteWorkflow";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityId", entityId);
			parameters.Add("WorkflowId", workflowId);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static void SetState(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entityMoniker, Microsoft.Xrm.Sdk.OptionSetValue state, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "SetState";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityMoniker", entityMoniker);
			parameters.Add("State", state);
			parameters.Add("Status", status);
			context.Execute(requestName, parameters);
		}
		
		public static void UpdateUserSettingsSystemUser(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid userId, Microsoft.Xrm.Sdk.Entity settings)
		{
			string requestName = "UpdateUserSettingsSystemUser";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("UserId", userId);
			parameters.Add("Settings", settings);
			context.Execute(requestName, parameters);
		}
		
		public static void ValidateSavedQuery(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string fetchXml, int queryType)
		{
			string requestName = "ValidateSavedQuery";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("FetchXml", fetchXml);
			parameters.Add("QueryType", queryType);
			context.Execute(requestName, parameters);
		}
		
		public static TResult Validate<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityCollection activities)
		
		{
			string requestName = "Validate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Activities", activities);
			return context.Execute<TResult>(requestName, parameters, "Result");
		}
		
		public static string[][] RetrieveParsedDataImportFile(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid importFileId, Microsoft.Xrm.Sdk.Query.PagingInfo pagingInfo)
		{
			string requestName = "RetrieveParsedDataImportFile";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ImportFileId", importFileId);
			parameters.Add("PagingInfo", pagingInfo);
			return context.Execute<string[][]>(requestName, parameters, "Values");
		}
		
		public static System.Guid AddSolutionComponent(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid componentId, int componentType, string solutionUniqueName, bool addRequiredComponents)
		{
			string requestName = "AddSolutionComponent";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ComponentId", componentId);
			parameters.Add("ComponentType", componentType);
			parameters.Add("SolutionUniqueName", solutionUniqueName);
			parameters.Add("AddRequiredComponents", addRequiredComponents);
			return context.Execute<System.Guid>(requestName, parameters, "id");
		}
		
		public static System.Guid RemoveSolutionComponent(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid componentId, int componentType, string solutionUniqueName)
		{
			string requestName = "RemoveSolutionComponent";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ComponentId", componentId);
			parameters.Add("ComponentType", componentType);
			parameters.Add("SolutionUniqueName", solutionUniqueName);
			return context.Execute<System.Guid>(requestName, parameters, "id");
		}
		
		public static bool IsComponentCustomizable(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid componentId, int componentType)
		{
			string requestName = "IsComponentCustomizable";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("ComponentId", componentId);
			parameters.Add("ComponentType", componentType);
			return context.Execute<bool>(requestName, parameters, "IsComponentCustomizable");
		}
		
		public static TResult RetrieveAuditDetails<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.Guid auditId)
		
		{
			string requestName = "RetrieveAuditDetails";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("AuditId", auditId);
			return context.Execute<TResult>(requestName, parameters, "AuditDetail");
		}
		
		public static TResult RetrieveAttributeChangeHistory<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, string attributeLogicalName, Microsoft.Xrm.Sdk.Query.PagingInfo pagingInfo)
		
		{
			string requestName = "RetrieveAttributeChangeHistory";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("AttributeLogicalName", attributeLogicalName);
			parameters.Add("PagingInfo", pagingInfo);
			return context.Execute<TResult>(requestName, parameters, "AuditDetailCollection");
		}
		
		public static TResult RetrieveRecordChangeHistory<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target, Microsoft.Xrm.Sdk.Query.PagingInfo pagingInfo)
		
		{
			string requestName = "RetrieveRecordChangeHistory";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("PagingInfo", pagingInfo);
			return context.Execute<TResult>(requestName, parameters, "AuditDetailCollection");
		}
		
		public static TResult RetrieveAuditPartitionList<TResult>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		
		{
			string requestName = "RetrieveAuditPartitionList";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<TResult>(requestName, parameters, "AuditPartitionDetailCollection");
		}
		
		public static int DeleteAuditData(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, System.DateTime endDate)
		{
			string requestName = "DeleteAuditData";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EndDate", endDate);
			return context.Execute<int>(requestName, parameters, "PartitionsDeleted");
		}
		
		public static Microsoft.Xrm.Sdk.EntityReferenceCollection RetrieveFilteredForms(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string entityLogicalName, Microsoft.Xrm.Sdk.OptionSetValue formType, System.Guid systemUserId)
		{
			string requestName = "RetrieveFilteredForms";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityLogicalName", entityLogicalName);
			parameters.Add("FormType", formType);
			parameters.Add("SystemUserId", systemUserId);
			return context.Execute<Microsoft.Xrm.Sdk.EntityReferenceCollection>(requestName, parameters, "SystemForms");
		}
		
		public static System.Guid CopySystemForm(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.Entity target, System.Guid sourceId)
		{
			string requestName = "CopySystemForm";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			parameters.Add("SourceId", sourceId);
			return context.Execute<System.Guid>(requestName, parameters, "Id");
		}
		
		public static TResponse RetrieveAbsoluteAndSiteCollectionUrl<TResponse>(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target)
			where TResponse : Microsoft.Xrm.Sdk.OrganizationResponse
		{
			string requestName = "RetrieveAbsoluteAndSiteCollectionUrl";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			return context.Execute<TResponse>(requestName, parameters);
		}
		
		public static void TriggerServiceEndpointCheck(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference entity)
		{
			string requestName = "TriggerServiceEndpointCheck";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Entity", entity);
			context.Execute(requestName, parameters);
		}
		
		public static void InstallSampleData(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "InstallSampleData";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			context.Execute(requestName, parameters);
		}
		
		public static void UninstallSampleData(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "UninstallSampleData";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			context.Execute(requestName, parameters);
		}
		
		public static Microsoft.Xrm.Sdk.EntityReferenceCollection QualifyLead(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference leadId, bool createAccount, bool createContact, bool createOpportunity, Microsoft.Xrm.Sdk.EntityReference opportunityCurrencyId, Microsoft.Xrm.Sdk.EntityReference opportunityCustomerId, Microsoft.Xrm.Sdk.EntityReference sourceCampaignId, Microsoft.Xrm.Sdk.OptionSetValue status)
		{
			string requestName = "QualifyLead";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("LeadId", leadId);
			parameters.Add("CreateAccount", createAccount);
			parameters.Add("CreateContact", createContact);
			parameters.Add("CreateOpportunity", createOpportunity);
			parameters.Add("OpportunityCurrencyId", opportunityCurrencyId);
			parameters.Add("OpportunityCustomerId", opportunityCustomerId);
			parameters.Add("SourceCampaignId", sourceCampaignId);
			parameters.Add("Status", status);
			return context.Execute<Microsoft.Xrm.Sdk.EntityReferenceCollection>(requestName, parameters, "CreatedEntities");
		}
		
		public static System.Guid CopyCampaignResponse(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference campaignResponseId)
		{
			string requestName = "CopyCampaignResponse";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("CampaignResponseId", campaignResponseId);
			return context.Execute<System.Guid>(requestName, parameters, "CampaignResponseId");
		}
		
		public static void Recalculate(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReference target)
		{
			string requestName = "Recalculate";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("Target", target);
			context.Execute(requestName, parameters);
		}
		
		public static void InstantiateFilters(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, Microsoft.Xrm.Sdk.EntityReferenceCollection templateCollection, System.Guid userId)
		{
			string requestName = "InstantiateFilters";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("TemplateCollection", templateCollection);
			parameters.Add("UserId", userId);
			context.Execute(requestName, parameters);
		}
		
		public static byte[] RetrieveEntityRibbon(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context, string entityName, object ribbonLocationFilter)
		{
			string requestName = "RetrieveEntityRibbon";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			parameters.Add("EntityName", entityName);
			parameters.Add("RibbonLocationFilter", ribbonLocationFilter);
			return context.Execute<byte[]>(requestName, parameters, "CompressedEntityXml");
		}
		
		public static byte[] RetrieveApplicationRibbon(this Microsoft.Xrm.Sdk.Client.OrganizationServiceContext context)
		{
			string requestName = "RetrieveApplicationRibbon";
			System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
			return context.Execute<byte[]>(requestName, parameters, "CompressedApplicationRibbonXml");
		}
	}
}
